import smtplib
from email.mime.text import MIMEText

EMAIL_FROM = "georgiynge2025@gmail.com"
EMAIL_PASS = "gzowaxfgswnrtspd"
EMAIL_TO = "georgiynge2025@gmail.com"

msg = MIMEText("–¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ")
msg["Subject"] = "–¢–µ—Å—Ç SMTP"
msg["From"] = EMAIL_FROM
msg["To"] = EMAIL_TO

try:
    server = smtplib.SMTP("smtp.gmail.com", 587)
    server.starttls()
    server.login(EMAIL_FROM, EMAIL_PASS)
    server.sendmail(EMAIL_FROM, EMAIL_TO, msg.as_string())
    server.quit()
    print("–ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ")
except Exception as e:
    print("–û—à–∏–±–∫–∞:", e)

# import shutil
# import os
# import smtplib
# from email.mime.text import MIMEText
# from email.mime.multipart import MIMEMultipart

# # === –ù–ê–°–¢–†–û–ô–ö–ò ===
# THRESHOLD = 30  # –ø–æ—Ä–æ–≥ –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è –≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö
# EMAIL_TO = "georgiynge2025@gmail.com"
# EMAIL_FROM = "georgiynge2025@gmail.com"  # –¢–≤–æ–π Gmail
# EMAIL_PASS = "gzowaxfgswnrtspd"      # App Password –±–µ–∑ –ø—Ä–æ–±–µ–ª–æ–≤!
# SMTP_SERVER = "smtp.gmail.com"
# SMTP_PORT = 587
# ROOT_PATH = "/"  # –ò–ª–∏ "C:\\" –¥–ª—è Windows
#
# # === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç–∏ –¥–∏—Å–∫–∞ ===
# total, used, free = shutil.disk_usage(ROOT_PATH)
# percent_used = used / total * 100
#
# if percent_used < THRESHOLD:
#     print(f"‚úÖ –î–∏—Å–∫ {ROOT_PATH} –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ {percent_used:.0f}%. –í—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ.")
#     exit(0)
#
# # === –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –±–æ–ª—å—à–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏ —Ñ–∞–π–ª–æ–≤ ===
# def get_top_dirs(path, top_n=10):
#     sizes = []
#     try:
#         for entry in os.scandir(path):
#             if entry.is_dir(follow_symlinks=False):
#                 size = get_dir_size(entry.path)
#                 sizes.append((size, entry.path))
#     except PermissionError:
#         pass
#     sizes.sort(reverse=True)
#     return sizes[:top_n]
#
# def get_dir_size(path):
#     total_size = 0
#     try:
#         for dirpath, dirnames, filenames in os.walk(path, onerror=lambda e: None):
#             for f in filenames:
#                 fp = os.path.join(dirpath, f)
#                 try:
#                     total_size += os.path.getsize(fp)
#                 except Exception:
#                     pass
#     except Exception:
#         pass
#     return total_size
#
# def get_top_files(path, top_n=10):
#     files = []
#     try:
#         for dirpath, dirnames, filenames in os.walk(path, onerror=lambda e: None):
#             for f in filenames:
#                 fp = os.path.join(dirpath, f)
#                 try:
#                     size = os.path.getsize(fp)
#                     files.append((size, fp))
#                 except Exception:
#                     pass
#     except Exception:
#         pass
#     files.sort(reverse=True)
#     return files[:top_n]
#
# def sizeof_fmt(num, suffix='B'):
#     for unit in ['','K','M','G','T']:
#         if num < 1024:
#             return f"{num:.1f}{unit}{suffix}"
#         num /= 1024
#     return f"{num:.1f}P{suffix}"
#
# # === –§–æ—Ä–º–∏—Ä—É–µ–º –æ—Ç—á—ë—Ç ===
# report = []
# report.append(f"‚ö†Ô∏è –î–∏—Å–∫ {ROOT_PATH} –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ {percent_used:.0f}%. –ü–æ—Ä–æ–≥: {THRESHOLD}%\n")
#
# report.append("üìÅ –¢–û–ü-10 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π:\n")
# for size, path in get_top_dirs(ROOT_PATH):
#     report.append(f"{sizeof_fmt(size):>10} ‚Äî {path}")
#
# report.append("\nüìÑ –¢–û–ü-10 —Å–∞–º—ã—Ö –±–æ–ª—å—à–∏—Ö —Ñ–∞–π–ª–æ–≤:\n")
# for size, path in get_top_files(ROOT_PATH):
#     report.append(f"{sizeof_fmt(size):>10} ‚Äî {path}")
#
# full_report = "\n".join(report)
# print(full_report)
#
# # === –û—Ç–ø—Ä–∞–≤–∫–∞ email ===
# msg = MIMEMultipart()
# msg["From"] = EMAIL_FROM
# msg["To"] = EMAIL_TO
# msg["Subject"] = f"‚ö†Ô∏è –î–∏—Å–∫ {ROOT_PATH} –∑–∞–ø–æ–ª–Ω–µ–Ω –Ω–∞ {percent_used:.0f}%"
# msg.attach(MIMEText(full_report, "plain"))
#
# try:
#     with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
#         server.starttls()
#         server.login(EMAIL_FROM, EMAIL_PASS)
#         server.send_message(msg)
#         print("üìß Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω.")
# except Exception as e:
#     print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email: {e}")