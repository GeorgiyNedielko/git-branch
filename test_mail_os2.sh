#!/bin/bash
echo "‚öôÔ∏è –û—Ç—á—ë—Ç –æ —Å–∏—Å—Ç–µ–º–µ ‚Äî $(date)"
echo

echo "üñ•Ô∏è –í–µ—Ä—Å–∏—è –û–°:"
uname -a
echo

echo "‚è∞ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã —Å–∏—Å—Ç–µ–º—ã:"
if [[ "$(uname)" == "Linux" ]]; then
  uptime -p
elif [[ "$(uname -o 2>/dev/null)" == "Msys" ]]; then
  uptime_sec=$(powershell.exe -Command "(Get-Date) - (Get-CimInstance Win32_OperatingSystem).LastBootUpTime | Select-Object -ExpandProperty TotalSeconds" 2>/dev/null | tr -d '\r' | tr ',' '.')
  if [[ -n "$uptime_sec" ]]; then
    uptime_hours=$(awk "BEGIN {print int($uptime_sec/3600)}")
    echo "$uptime_hours —á–∞—Å–æ–≤"
  else
    echo "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
  fi
else
  echo "–ö–æ–º–∞–Ω–¥–∞ uptime –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞"
fi
echo

echo "üìä –ó–∞–≥—Ä—É–∂–µ–Ω–Ω–æ—Å—Ç—å —Å–∏—Å—Ç–µ–º—ã:"
if [[ "$(uname)" == "Linux" ]]; then
  uptime | awk -F'load average:' '{ print $2 }' | sed 's/^ *//'
elif [[ "$(uname -o 2>/dev/null)" == "Msys" ]]; then
  cpu_load=$(powershell.exe -Command "Get-Counter '\Processor(_Total)\% Processor Time' | Select -ExpandProperty CounterSamples | Select -ExpandProperty CookedValue" 2>/dev/null | tr -d '\r' | awk '{printf "%.1f%%", $1}')
  echo "${cpu_load:-–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ}"
else
  echo "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
fi
echo

echo "üíæ –ó–∞–Ω—è—Ç–æ–µ –¥–∏—Å–∫–æ–≤–æ–µ –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ (–∫–æ—Ä–Ω–µ–≤–æ–π —Ä–∞–∑–¥–µ–ª):"
df -h /
echo

echo "üîù –¢–û–ü 5 –ø—Ä–æ—Ü–µ—Å—Å–æ–≤ –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –ø–∞–º—è—Ç–∏:"
if [[ "$(uname)" == "Linux" ]]; then
  ps aux --sort=-%mem | head -n 6
elif [[ "$(uname -o 2>/dev/null)" == "Msys" ]]; then

powershell.exe -Command "Get-Process | Sort WS -Descending | Select -First 5 | ForEach-Object { \"{0,-6} {1,-25} {2,8} MB\" -f \$_.Id, \$_.ProcessName, [math]::Round(\$_.WS / 1MB, 2) }"

else
  echo "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
fi
echo

echo "üìà –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–æ—Ü–µ—Å—Å–æ–≤:"
if [[ "$(uname)" == "Linux" ]]; then
  ps -e --no-headers | wc -l
elif [[ "$(uname -o 2>/dev/null)" == "Msys" ]]; then
  powershell.exe -Command "(Get-Process).Count"
else
  echo "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
fi
echo

echo "üë• –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ —Å–∏—Å—Ç–µ–º–µ:"
if [[ "$(uname)" == "Linux" ]]; then
  who | cut -d' ' -f1 | sort | uniq | wc -l
elif [[ "$(uname -o 2>/dev/null)" == "Msys" ]]; then
  powershell.exe -Command "[Environment]::UserName" 2>/dev/null | tr -d '\r'
else
  echo "–ù–µ–¥–æ—Å—Ç—É–ø–Ω–æ"
fi
echo

# –ü—É—Ç—å –¥–æ Python –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä–∞
PYTHON="/c/Users/georg/PyCharmMiscProject/.venv/Scripts/python.exe"

# –í—Ä–µ–º–µ–Ω–Ω—ã–π Python-—Å–∫—Ä–∏–ø—Ç
TMP_SCRIPT=$(mktemp --suffix=.py)

# –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π Python-—Å–∫—Ä–∏–ø—Ç
cat <<EOF > "$TMP_SCRIPT"
import smtplib
from email.mime.text import MIMEText

EMAIL_FROM = "georgiynge2025@gmail.com"
EMAIL_PASS = "gzowaxfgswnrtspd"
EMAIL_TO = "georgiynge2025@gmail.com"

msg = MIMEText("üì¨ –≠—Ç–æ —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –∏–∑ Bash —á–µ—Ä–µ–∑ Python!")
msg["Subject"] = "‚úÖ –¢–µ—Å—Ç –∏–∑ Git Bash"
msg["From"] = EMAIL_FROM
msg["To"] = EMAIL_TO

try:
    server = smtplib.SMTP("smtp.gmail.com", 587, timeout=10)
    server.starttls()
    server.login(EMAIL_FROM, EMAIL_PASS)
    server.sendmail(EMAIL_FROM, EMAIL_TO, msg.as_string())
    server.quit()
    print("üìß –ü–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
except Exception as e:
    print("‚ùå –û—à–∏–±–∫–∞:", e)
EOF

# –ó–∞–ø—É—Å–∫–∞–µ–º Python-—Å–∫—Ä–∏–ø—Ç
"$PYTHON" "$TMP_SCRIPT"

# –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
rm "$TMP_SCRIPT"
